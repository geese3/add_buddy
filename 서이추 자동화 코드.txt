서이추 자동화 코드
pip install selenium==4.11.0

pip install pyperclip

pip install bs4

pip install pandas

-------------------------------------------------------------------------------

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
import pandas as pd
import time


-------------------------------------------------------------------------------------------
1. search_keyword = '    '  : ---> 여기에 본인 관심분야로 변경하세요. ex)여행, 건강 등

2. total_pages = 100 : 해보시고 원하는 페이지로 설정해보세요. 1,000페이지까지 가능합니다.

3. 마지막 csv 파일 저장 : 제가 해놓은 경제 대신 본인 원하는 키워드 따로 작성해주세요.


중요!! 네이버가 봇으로 인식해 차단할 경우 오류 발생. User-Agent 설정 필수:
# 봇 탐지 회피 설정
chrome_options.add_argument("--disable-blink-features=AutomationControlled")
chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])

----------------------------------------------------------------------------------------------
<네이버 아이디 크롤링>

# Chrome 설정
chrome_options = Options()
chrome_options.add_argument("--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36")
chrome_options.add_argument("--disable-blink-features=AutomationControlled")
chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])

service = Service('chromedriver.exe')
driver = webdriver.Chrome(service=service, options=chrome_options)

blog_id_set = set()
search_keyword = '경제'

try:
    for page in range(1, 101):
        search_url = f"https://section.blog.naver.com/Search/Post.naver?pageNo={page}&rangeType=ALL&orderBy=sim&keyword={search_keyword}"
        driver.get(search_url)

        # 명시적 대기 적용
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "author"))
        )

        authors = driver.find_elements(By.CLASS_NAME, 'author')
        for author in authors:
            blog_link = author.get_attribute('href')
            if blog_link:
                blog_id = blog_link.split('/')[-1]
                blog_id_set.add(blog_id)
        
        print(f"페이지 {page} 완료, 수집 ID: {len(blog_id_set)}개")
        time.sleep(1)  # 요청 간격 확대

except Exception as e:
    print(f"오류 발생: {str(e)}")

finally:
    driver.quit()
    pd.DataFrame(list(blog_id_set), columns=['BlogID']).to_csv('naver_blogId_경제.csv', index=False)

-----------------------------------------------------------

크롤링 완료후

------------------------------------------------------------

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
import time
from bs4 import BeautifulSoup
import csv
import pandas as pd
import pyperclip
import time
import pickle
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException, TimeoutException, StaleElementReferenceException
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
import itertools

-----------------------------------------------------------------------

1. nid : 본인 네이버 아이디 입력하세요.

2. npw : 본인 네이버 패스워드 입력하세요.

3. data : naver_blogId_경제 여기서 '경제' 대신 위에서 설정한 파일 이름 적어주세요. ex) 건강, 여행 등

4. msg : " " 큰 따옴표 안에 본인 서이추 입력 메세지 넣어주세요!

5. for i in range(0, 100): 이 구문은 csv 파일의 아이디를 행 순서대로 읽어오는 것입니다.
0에서 100까지 하는 걸 추천합니다.

----------------------------------------------------------------

options = webdriver.ChromeOptions()
# options.add_argument("headless")  # 필요시 헤드리스 모드 활성화

service = Service('chromedriver.exe')
driver = webdriver.Chrome(service=service, options=options)
wait = WebDriverWait(driver, 2)
counter = itertools.count(start = 1)

# URL 설정
url = "https://nid.naver.com/nidlogin.login?mode=form&url=https://www.naver.com/"
driver.get(url)

nid = '본인 네이버 아이디 입력하세요'
npw = '본인 네이버 패스워드 입력하세요'

# 무한 루프 방지용 변수
login_success = False

while not login_success:
    try:
        # 아이디 입력
        time.sleep(1)  # 페이지 로딩 대기
        pyperclip.copy(nid)
        driver.find_element(By.CSS_SELECTOR, '#id').send_keys(Keys.CONTROL + 'v')
        
        # 비밀번호 입력
        time.sleep(1)
        pyperclip.copy(npw)
        driver.find_element(By.CSS_SELECTOR, '#pw').send_keys(Keys.CONTROL + 'v')

        # 로그인 버튼 클릭
        driver.find_element(By.XPATH, '//*[@id="log.login"]').click()
        
        # 로그인 성공 여부 확인
        time.sleep(2)  # 로그인 처리 대기
        if driver.current_url == "https://www.naver.com/":  # 성공적으로 로그인한 경우
            print("로그인 성공")
            login_success = True  # 로그인 성공
        else:
            print("로그인 실패. 다시 시도합니다.")
            driver.get(url)  # 로그인 페이지로 돌아가기

    except Exception as e:
        print("오류 발생:", e)
        break  # 오류 발생 시 루프 종료

lists_id = []
data = pd.read_csv(f'naver_blogId_경제.csv', encoding = "ISO=8859-1")
msg = "안녕하세요. 흑블입니다. 관심사가 비슷한 것 같아 서이추 드립니다. 앞으로 함께 성장해나가면 좋겠습니다."

for i in data:
    for j in range(len(data)):
        lists_id.append(data[i][j])
s = set(lists_id)
sorted_list_id = list(s)

for i in range(0, 100):
    try:
        blog_url = "http://m.blog.naver.com/BuddyAddForm.naver?blogId=" + sorted_list_id[i] + "&returnUrl=https%253A%252F%252Fm.blog.naver.com%252F"
        driver.get(blog_url)

        exceptional_text = WebDriverWait(driver, 3).until(
            EC.presence_of_element_located((By.CLASS_NAME, 'dsc'))
        ).text
        
        if "진행중" in exceptional_text or "제한된" in exceptional_text:  # 신청 진행 중인 경우
            print("이미 이웃 신청이 진행 중입니다. 다음으로 넘어갑니다.")
            continue

        checkbox = WebDriverWait(driver, 3).until(
            EC.element_to_be_clickable((By.XPATH, '//label[contains(text(), "서로이웃")]/preceding-sibling::input'))
        )
        if not checkbox.is_enabled(): 
            print("서로이웃 추가가 불가능하여 다음으로 넘어갑니다.")
            continue

        checkbox.click()  # 체크박스 클릭
        print("서로이웃 체크박스 클릭 완료")

        driver.find_element(By.TAG_NAME, 'textarea').clear()
        driver.find_element(By.TAG_NAME, 'textarea').send_keys(msg)
        driver.implicitly_wait(5)
        print("메세지 작성 완료")

        driver.find_element(By.CLASS_NAME, 'btn_ok').click()
        print(f"{next(counter)}번째 서이추 완료!")
        driver.implicitly_wait(10)

    except Exception as e:
        print(f"Error: {e} - {sorted_list_id[i]}에 대한 이웃 추가 실패, 다음으로 넘어갑니다.")
        continue

driver.quit()
